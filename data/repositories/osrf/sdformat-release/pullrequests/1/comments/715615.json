{"links": {"self": {"href": "data/repositories/osrf/sdformat-release/pullrequests/1/comments/715615.json"}, "code": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/sdformat-release/diff/osrf/sdformat-release:None..None?path=ubuntu%2Fdebian%2Flibsdformat-dev.install"}, "html": {"href": "#!/osrf/sdformat-release/pull-requests/1/_/diff#comment-715615"}}, "parent": {"id": 712085, "links": {"self": {"href": "data/repositories/osrf/sdformat-release/pullrequests/1/comments/712085.json"}, "html": {"href": "#!/osrf/sdformat-release/pull-requests/1/_/diff#comment-712085"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 1, "links": {"self": {"href": "data/repositories/osrf/sdformat-release/pullrequests/1.json"}, "html": {"href": "#!/osrf/sdformat-release/pull-requests/1"}}, "title": "Adapt sdformat to debian packaging policy"}, "content": {"raw": "Not on my computer:\n\n```\n$ cat /etc/issue         \nUbuntu 12.04.3 LTS \\n \\l\n\n$ cat -n multiarch /usr/share/cmake-2.8/Modules/GNUInstallDirs.cmake\n[snip] \n    71  if(NOT DEFINED CMAKE_INSTALL_LIBDIR)\n    72    set(_LIBDIR_DEFAULT \"lib\")\n    73    # Override this default 'lib' with 'lib64' iff:\n    74    #  - we are on Linux system but NOT cross-compiling\n    75    #  - we are NOT on debian\n    76    #  - we are on a 64 bits system\n    77    # reason is: amd64 ABI: http://www.x86-64.org/documentation/abi.pdf\n    78    # Note that the future of multi-arch handling may be even\n    79    # more complicated than that: http://wiki.debian.org/Multiarch\n    80    if(CMAKE_SYSTEM_NAME MATCHES \"Linux\"\n    81        AND NOT CMAKE_CROSSCOMPILING\n    82        AND NOT EXISTS \"/etc/debian_version\")\n    83      if(NOT DEFINED CMAKE_SIZEOF_VOID_P)\n    84        message(AUTHOR_WARNING\n    85          \"Unable to determine default CMAKE_INSTALL_LIBDIR directory because no target architectur\ne is known. \"\n    86          \"Please enable at least one language before including GNUInstallDirs.\")\n    87      else()\n    88        if(\"${CMAKE_SIZEOF_VOID_P}\" EQUAL \"8\")\n    89          set(_LIBDIR_DEFAULT \"lib64\")\n    90        endif()\n    91      endif()\n    92    endif()\n    93    set(CMAKE_INSTALL_LIBDIR \"${_LIBDIR_DEFAULT}\" CACHE PATH \"object code libraries (${_LIBDIR_DEFA\nULT})\")\n    94  endif()\n[snip]\n```\n\nAFAIK you are only supporting multiarch enabled distributions so I am not too sure what was the issue here?\n\nIf you need to support non-multiarch compatible distrobs, see:\n\n1. https://wiki.debian.org/Multiarch/Implementation#dh.281.29_and_autotools\n2. https://wiki.debian.org/Multiarch/Implementation#Dynamic_debian.2F.2A_files\n\n\nShortly: another way is to just generate the *install files using a simple Makefile rule and a small tool called dh-exec.\n\nIt is very easy to do! :)", "markup": "markdown", "html": "<p>Not on my computer:</p>\n<div class=\"codehilite\"><pre><span></span>$ cat /etc/issue         \nUbuntu <span class=\"m\">12</span>.04.3 LTS <span class=\"se\">\\n</span> <span class=\"se\">\\l</span>\n\n$ cat -n multiarch /usr/share/cmake-2.8/Modules/GNUInstallDirs.cmake\n<span class=\"o\">[</span>snip<span class=\"o\">]</span> \n    <span class=\"m\">71</span>  <span class=\"k\">if</span><span class=\"o\">(</span>NOT DEFINED CMAKE_INSTALL_LIBDIR<span class=\"o\">)</span>\n    <span class=\"m\">72</span>    set<span class=\"o\">(</span>_LIBDIR_DEFAULT <span class=\"s2\">&quot;lib&quot;</span><span class=\"o\">)</span>\n    <span class=\"m\">73</span>    <span class=\"c1\"># Override this default &#39;lib&#39; with &#39;lib64&#39; iff:</span>\n    <span class=\"m\">74</span>    <span class=\"c1\">#  - we are on Linux system but NOT cross-compiling</span>\n    <span class=\"m\">75</span>    <span class=\"c1\">#  - we are NOT on debian</span>\n    <span class=\"m\">76</span>    <span class=\"c1\">#  - we are on a 64 bits system</span>\n    <span class=\"m\">77</span>    <span class=\"c1\"># reason is: amd64 ABI: http://www.x86-64.org/documentation/abi.pdf</span>\n    <span class=\"m\">78</span>    <span class=\"c1\"># Note that the future of multi-arch handling may be even</span>\n    <span class=\"m\">79</span>    <span class=\"c1\"># more complicated than that: http://wiki.debian.org/Multiarch</span>\n    <span class=\"m\">80</span>    <span class=\"k\">if</span><span class=\"o\">(</span>CMAKE_SYSTEM_NAME MATCHES <span class=\"s2\">&quot;Linux&quot;</span>\n    <span class=\"m\">81</span>        AND NOT CMAKE_CROSSCOMPILING\n    <span class=\"m\">82</span>        AND NOT EXISTS <span class=\"s2\">&quot;/etc/debian_version&quot;</span><span class=\"o\">)</span>\n    <span class=\"m\">83</span>      <span class=\"k\">if</span><span class=\"o\">(</span>NOT DEFINED CMAKE_SIZEOF_VOID_P<span class=\"o\">)</span>\n    <span class=\"m\">84</span>        message<span class=\"o\">(</span>AUTHOR_WARNING\n    <span class=\"m\">85</span>          <span class=\"s2\">&quot;Unable to determine default CMAKE_INSTALL_LIBDIR directory because no target architectur</span>\n<span class=\"s2\">e is known. &quot;</span>\n    <span class=\"m\">86</span>          <span class=\"s2\">&quot;Please enable at least one language before including GNUInstallDirs.&quot;</span><span class=\"o\">)</span>\n    <span class=\"m\">87</span>      <span class=\"k\">else</span><span class=\"o\">()</span>\n    <span class=\"m\">88</span>        <span class=\"k\">if</span><span class=\"o\">(</span><span class=\"s2\">&quot;</span><span class=\"si\">${</span><span class=\"nv\">CMAKE_SIZEOF_VOID_P</span><span class=\"si\">}</span><span class=\"s2\">&quot;</span> EQUAL <span class=\"s2\">&quot;8&quot;</span><span class=\"o\">)</span>\n    <span class=\"m\">89</span>          set<span class=\"o\">(</span>_LIBDIR_DEFAULT <span class=\"s2\">&quot;lib64&quot;</span><span class=\"o\">)</span>\n    <span class=\"m\">90</span>        endif<span class=\"o\">()</span>\n    <span class=\"m\">91</span>      endif<span class=\"o\">()</span>\n    <span class=\"m\">92</span>    endif<span class=\"o\">()</span>\n    <span class=\"m\">93</span>    set<span class=\"o\">(</span>CMAKE_INSTALL_LIBDIR <span class=\"s2\">&quot;</span><span class=\"si\">${</span><span class=\"nv\">_LIBDIR_DEFAULT</span><span class=\"si\">}</span><span class=\"s2\">&quot;</span> CACHE PATH <span class=\"s2\">&quot;object code libraries (</span><span class=\"si\">${</span><span class=\"nv\">_LIBDIR_DEFA</span><span class=\"p\"></span>\n<span class=\"p\">ULT</span><span class=\"si\">}</span><span class=\"s2\">)&quot;</span><span class=\"o\">)</span>\n    <span class=\"m\">94</span>  endif<span class=\"o\">()</span>\n<span class=\"o\">[</span>snip<span class=\"o\">]</span>\n</pre></div>\n\n\n<p>AFAIK you are only supporting multiarch enabled distributions so I am not too sure what was the issue here?</p>\n<p>If you need to support non-multiarch compatible distrobs, see:</p>\n<ol>\n<li><a href=\"https://wiki.debian.org/Multiarch/Implementation#dh.281.29_and_autotools\" rel=\"nofollow\" class=\"ap-connect-link\">https://wiki.debian.org/Multiarch/Implementation#dh.281.29_and_autotools</a></li>\n<li><a href=\"https://wiki.debian.org/Multiarch/Implementation#Dynamic_debian.2F.2A_files\" rel=\"nofollow\" class=\"ap-connect-link\">https://wiki.debian.org/Multiarch/Implementation#Dynamic_debian.2F.2A_files</a></li>\n</ol>\n<p>Shortly: another way is to just generate the *install files using a simple Makefile rule and a small tool called dh-exec.</p>\n<p>It is very easy to do! :)</p>", "type": "rendered"}, "created_on": "2013-10-23T01:57:13.648174+00:00", "user": {"display_name": "Thomas Moulard", "uuid": "{e1f47898-cedc-4c14-a637-d0c43400e843}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be1f47898-cedc-4c14-a637-d0c43400e843%7D"}, "html": {"href": "https://bitbucket.org/%7Be1f47898-cedc-4c14-a637-d0c43400e843%7D/"}, "avatar": {"href": "https://bitbucket.org/account/thomas_moulard/avatar/"}}, "nickname": "thomas_moulard", "type": "user", "account_id": null}, "inline": {"to": null, "from": null, "outdated": false, "path": "ubuntu/debian/libsdformat-dev.install"}, "updated_on": "2013-10-23T01:57:51.945175+00:00", "type": "pullrequest_comment", "id": 715615}