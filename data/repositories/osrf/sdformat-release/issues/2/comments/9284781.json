{"links": {"self": {"href": "data/repositories/osrf/sdformat-release/issues/2/comments/9284781.json"}, "html": {"href": "#!/osrf/sdformat-release/issues/2#comment-9284781"}}, "issue": {"links": {"self": {"href": "data/repositories/osrf/sdformat-release/issues/2.json"}}, "type": "issue", "id": 2, "repository": {"links": {"self": {"href": "data/repositories/osrf/sdformat-release.json"}, "html": {"href": "#!/osrf/sdformat-release"}, "avatar": {"href": "data/bytebucket.org/ravatar/{90557c78-8c95-44cd-b2a5-1517535ddb0d}ts=default"}}, "type": "repository", "name": "sdformat-release", "full_name": "osrf/sdformat-release", "uuid": "{90557c78-8c95-44cd-b2a5-1517535ddb0d}"}, "title": "Split out arch-independent files from libsdformat"}, "content": {"raw": "Is it really worth the effort to share all of the arch independent sdf files?  If you really need sdformat 1.x and sdformat 2.x to be installable in parallel, the easiest solution would be to separate them into /usr/share/sdformat-1.x and /usr/share/sdformat-2.x.  With this approach you can distribute only the sdf definitions that each library is compatible with, and you are free in the future to deprecate older sdf versions in newer releases of the library (which may or may not ever need to happen.)\n\nIf you would rather keep the sdf files separate from any library implementations, then it makes more sense to maintain them in a separate package, like the urdfdom-headers and urdfdom split.  That package would have a separate version number from the sdf library implementations, and should probably move to a different source repository.  Distributions would have to review the new noarch sdformat-common package before upgrading sdformat, but once that's done all other sdformat library versions can depend on it.\n", "markup": "markdown", "html": "<p>Is it really worth the effort to share all of the arch independent sdf files?  If you really need sdformat 1.x and sdformat 2.x to be installable in parallel, the easiest solution would be to separate them into /usr/share/sdformat-1.x and /usr/share/sdformat-2.x.  With this approach you can distribute only the sdf definitions that each library is compatible with, and you are free in the future to deprecate older sdf versions in newer releases of the library (which may or may not ever need to happen.)</p>\n<p>If you would rather keep the sdf files separate from any library implementations, then it makes more sense to maintain them in a separate package, like the urdfdom-headers and urdfdom split.  That package would have a separate version number from the sdf library implementations, and should probably move to a different source repository.  Distributions would have to review the new noarch sdformat-common package before upgrading sdformat, but once that's done all other sdformat library versions can depend on it.</p>", "type": "rendered"}, "created_on": "2014-03-24T12:43:10.298589+00:00", "user": {"display_name": "Rich Mattes", "uuid": "{1ef6f3dd-b8db-412b-94e9-e430e7aafd23}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B1ef6f3dd-b8db-412b-94e9-e430e7aafd23%7D"}, "html": {"href": "https://bitbucket.org/%7B1ef6f3dd-b8db-412b-94e9-e430e7aafd23%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/d431baafeedf5d8921cb50a3c9902e16d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsRM-0.png"}}, "nickname": "richmattes", "type": "user", "account_id": "557058:a38935e3-9a08-40d9-917a-ff19973e58df"}, "updated_on": null, "type": "issue_comment", "id": 9284781}