{"links": {"self": {"href": "data/repositories/osrf/gazebo-release/issues/42/comments/5216851.json"}, "html": {"href": "#!/osrf/gazebo-release/issues/42#comment-5216851"}}, "issue": {"links": {"self": {"href": "data/repositories/osrf/gazebo-release/issues/42.json"}}, "type": "issue", "id": 42, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo-release.json"}, "html": {"href": "#!/osrf/gazebo-release"}, "avatar": {"href": "data/bytebucket.org/ravatar/{95a21594-633d-4752-b9d6-5be95d20150c}ts=default"}}, "type": "repository", "name": "gazebo-release", "full_name": "osrf/gazebo-release", "uuid": "{95a21594-633d-4752-b9d6-5be95d20150c}"}, "title": "Split gazebo into multiple packages"}, "content": {"raw": "Just some insight on this.\nThe development/non-development package differentiation is clearly stated in the Debian Policy and is mandatory. See: http://www.debian.org/doc/debian-policy/ch-sharedlibs.html\n\nThere is several reason to this:\n\n1. Avoid cluttering the end users disk with development data they don't care about.\n2. Non development packages are co-installable whereas development versions are not (usually).\n3. Development versions may be architecture independent.\n\nThe same reasoning apply to the other ones: debugging symbols are really heavy and should be provided separately, documentation and data files are architecture independent so it is better to package them separately.\n\nThe Debian buildfarm does not generate architecture independent package so this also reduces the load on it.\n\nThe plug-ins are packaged separately for a slightly different reason: the libXYZ packages must provide a consistent ABI tracked by a symbols file. On the opposite plug-ins are manipulated through the dlopen system calls and therefore symbols are only accessed by their name (as strings). Therefore no symbols file are necessary for them.\n\n\nNote: Bloom lacks the ability to make this dispatch right now and this is, by far, the biggest issue IMHO when it comes to Debian integration.", "markup": "markdown", "html": "<p>Just some insight on this.\nThe development/non-development package differentiation is clearly stated in the Debian Policy and is mandatory. See: <a href=\"http://www.debian.org/doc/debian-policy/ch-sharedlibs.html\" rel=\"nofollow\" class=\"ap-connect-link\">http://www.debian.org/doc/debian-policy/ch-sharedlibs.html</a></p>\n<p>There is several reason to this:</p>\n<ol>\n<li>Avoid cluttering the end users disk with development data they don't care about.</li>\n<li>Non development packages are co-installable whereas development versions are not (usually).</li>\n<li>Development versions may be architecture independent.</li>\n</ol>\n<p>The same reasoning apply to the other ones: debugging symbols are really heavy and should be provided separately, documentation and data files are architecture independent so it is better to package them separately.</p>\n<p>The Debian buildfarm does not generate architecture independent package so this also reduces the load on it.</p>\n<p>The plug-ins are packaged separately for a slightly different reason: the libXYZ packages must provide a consistent ABI tracked by a symbols file. On the opposite plug-ins are manipulated through the dlopen system calls and therefore symbols are only accessed by their name (as strings). Therefore no symbols file are necessary for them.</p>\n<p>Note: Bloom lacks the ability to make this dispatch right now and this is, by far, the biggest issue IMHO when it comes to Debian integration.</p>", "type": "rendered"}, "created_on": "2013-07-17T02:23:41.886145+00:00", "user": {"display_name": "Thomas Moulard", "uuid": "{e1f47898-cedc-4c14-a637-d0c43400e843}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be1f47898-cedc-4c14-a637-d0c43400e843%7D"}, "html": {"href": "https://bitbucket.org/%7Be1f47898-cedc-4c14-a637-d0c43400e843%7D/"}, "avatar": {"href": "https://bitbucket.org/account/thomas_moulard/avatar/"}}, "nickname": "thomas_moulard", "type": "user", "account_id": null}, "updated_on": null, "type": "issue_comment", "id": 5216851}